// This script contains functionality to allow bots to camp on a position. It can be restricted to specific weapons (panzer, flamethrower, sniper).
this.Name = "CAMP";
this.Parent = "HighLevel";
this.SkipGetPriorityWhenActive = true;
this.Debug = false;
this.query = { 0xa9ef3654 /* CAMP */, 0x4fed19c1 /* DEFEND */, 0x4595b8fd /* ATTACK */, 0xe8fbadc0 /* SNIPE */, 0x731f6315 /* PANZER */, 0x9fa9940a /* VENOM */, 0x86584d00 /* FLAME */ };

this.GetPriority = function()
{
	Util.GetPriority(this, this.query);
};

this.Enter = function()
{
	if(!this.MarkInProgress()) { this.Finished(); }
};

this.Exit = function()
{
	this.Bot.ReleaseButton(BTN.CROUCH);

	// restore combat movement restrictions
	if (this.CombatMovementDisabled) {
		this.Bot.DisableCombatMovement = false;
		this.CombatMovementDisabled = false;
	}
};

this.Update = function()
{
	position = this.MapGoal.GetPosition();
	Util.RouteTo(this);

	UsingWeapon = 0;
	IsSniper = null;

	if ( this.MapGoal.Weapons )
	{
		if (tableCount(this.MapGoal.Weapons) > 0)
		{
			UsingWeapon = this.Bot.HasAnyWeapon(this.MapGoal.Weapons, { CheckCharged=false, CheckAmmo=false });
			IsSniper = this.Bot.CanSnipe();
		}
	}
	else
	{
		Util.MapDebugPrint(this.MapGoal.GetName() + " has no Weapons Table", 2);
	}

	if (this.MapGoal.DisableCM > 0 && !this.Bot.DisableCombatMovement)
	{
		this.CombatMovementDisabled = true;
		this.Bot.DisableCombatMovement = true;
	}

	if ( UsingWeapon )
	{
		if ( IsSniper ) {
			this.AddWeaponRequest( Priority.Medium, WEAPON.SNIPERRIFLE ); //SNIPERRIFLE is zoomed MAUSER
		}
		else {
			this.AddWeaponRequest( Priority.Medium, UsingWeapon );
		}
	}

	peektime = 0;
	CampTime = RandFloat(this.MapGoal.MinCampTime, this.MapGoal.MaxCampTime);
	for(timeout = 0; timeout < CampTime; timeout += 1)
	{
		if (this.MapGoal.GetPosition() != position)
		{
			//go to a new position
			this.ReleaseAimRequest();
			return;
		}
		if ( UsingWeapon && (!this.Bot.HasAmmo(UsingWeapon) || (UsingWeapon == WEAPON.PANZERFAUST && !this.Bot.IsWeaponCharged(WEAPON.PANZERFAUST, 0))) )
		{
			this.BlackboardDelay(20);
			this.Finished();
		}

		switch (this.MapGoal.Stance)
		{
			case "crouch":
			{
				this.Bot.HoldButton(BTN.CROUCH, 1.1);
			}
			case "peek":
			{
				if ( timeout % RandInt(2,4) == 0 ) { // stand
					if ( peektime == 0 ) {
						peektime = timeout + this.Bot.ReactionTime + 1;
					}
				}
				else if ( timeout >= peektime ) { // hide
					peektime = 0;
					this.Bot.HoldButton(BTN.CROUCH, RandInt(1,3));
				}
			}
		}

		this.AddAimRequest(Priority.Low, "facing", Util.GetRandomTableValue(this.MapGoal.AimVectors));

		sleep(1);
	}

	// don't choose the same camp spot
	this.BlackboardDelay(5);
	this.Finished();
};

