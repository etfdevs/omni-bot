global Map =
{
	Debug = 0, // please set to zero before distributing your script

	Allied_Helicopter_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Allied_Helicopter_Destroyed" );
	},

	Cathedrale_door_Destroyed = function( trigger )
	{
		Util.MapDebugPrint( "Cathedrale_door_Destroyed" );
	},

	Top_Secret_Documents_Taken = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, true, "DEFEND_transmit.*" );
		SetAvailableMapGoals( TEAM.AXIS, false, {
			"DEFEND_rChurch.*",
			"AIRSTRIKE_rChurch.*",
		});

		SetAvailableMapGoals( TEAM.ALLIES, true, "DEFEND_transmit.*" );

		Util.MapDebugPrint( "Top_Secret_Documents_Taken" );
	},

	Top_Secret_Documents_Secured = function( trigger )
	{
		SetAvailableMapGoals( TEAM.AXIS, true, {
			"DEFEND_rChurch.*",
			"AIRSTRIKE_rChurch.*",
		});
		SetAvailableMapGoals( TEAM.AXIS, false, "DEFEND_transmit.*" );

		SetAvailableMapGoals( TEAM.ALLIES, false, "DEFEND_transmit.*" );

		Util.MapDebugPrint( "Top_Secret_Documents_Secured" );
	},

};

global OnMapLoad = function()
{
	// Register callback functions
	OnTrigger( "MISSING_STRING", Map.Cathedrale_door_Destroyed );
	OnTrigger( "Allies have stolen the Top Secret Documents!!", Map.Top_Secret_Documents_Taken );
	OnTrigger( "Flag returned Top Secret Documents!", Map.Top_Secret_Documents_Secured );

	Util.DisableGoal( ".*", true );
	RTCWUtil.SetPrimaryGoals( 1.0 );
	Util.EnableGoal( "CAPPOINT_transmit" );

	SetAvailableMapGoals( TEAM.ALLIES, true, {
		"FLAG.*",
		"PLANT_Cathedrale_Door",
	});

	SetAvailableMapGoals( TEAM.AXIS, true, {
		"DEFEND_rChurch.*",
		"AIRSTRIKE_rChurch.*",
	});

	InitializeRoutes();
	yield();yield();
	RTCWUtil.KillEntities( {171, 164, 165} );

	Util.MapDebugPrint( "Omni-bot map script for " + GetMapName() + " executed." );
};

global OnBotJoin = function( bot )
{
	bot.TargetBreakableDist = 90.0;
	RTCWUtil.NoSnipe( bot );

};

global InitializeRoutes = function()
{
	MapRoutes =
	{
		FLAG_Top_Secret_Documents =
		{
			ROUTE_bspawn =
			{
				ROUTE_spawnsteps = {},
				ROUTE_radioroom = {ROUTE_radiohallway = {},},
				ROUTE_spawnladder = {},
				ROUTE_churchdoor = {},
				ROUTE_waterladder = {},
			},
		},
		CAPPOINT_transmit =
		{
			ROUTE_docsteal =
			{
				ROUTE_churchdoor =
				{
					ROUTE_radioroom = {},
				},
				ROUTE_waterladder = {},
			},
		},
	};
	Util.Routes(MapRoutes);
};
